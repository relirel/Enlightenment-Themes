images {
#ifdef VTX_SHELF_MULIT
   image: "shelf_background_bottom.png" COMP;
   image: "shelf_background_left.png" COMP;
   image: "shelf_background_right.png" COMP;
   image: "shelf_background_top.png" COMP;
#endif
#ifdef VTX_SHELF_SINGLE
  images: "shelf_background.png" COMP;
#endif
#if ! defined(VTX_SHELF_SINGLE) && ! defined(VTX_SHELF_MULIT)
   image: "e_surface.png" COMP;
#endif
#ifdef VTX_SHELF_ENTRY
   image: "shelf_entry.png" COMP;
#endif
}

group {
   name: "e/shelf/default/base";
   data {
      // this tells e the border is shaped
      item: "shaped" "1";
      item: "hidden_state_size" "1";
      // This makes the border hide instantly after the given amount of seconds
      // item: "instant_delay" "3.0";
   }
   parts {

      part {
	 name:          "base";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_top.png";
#endif
#ifdef VTX_SHELF_SINGLE
         normal: "shelf_background.png";
#endif
#if ! defined(VTX_SHELF_SINGLE) && ! defined(VTX_SHELF_MULIT)
         normal: "e_surface.png";
#endif
	       border: VTX_IMG_BORDER;
	    }
	    fill {
	       origin {
		  offset: 0 -6;
	       }
	       size {
		  offset: 0 6;
	       }
	    }
	 }
	 description {
	    state:    "top_left" 0.0;
	    inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_top.png";
#endif
	    }
	    fill {
	       origin {
		  offset: -16 -6;
	       }
	       size {
		  offset: 16 6;
	       }
	    }
	 }
	 description {
	    state:    "top_right" 0.0;
	    inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_top.png";
#endif
	    }
	    fill {
	       origin {
		  offset: 0 -6;
	       }
	       size {
		  offset: 16 6;
	       }
	    }
	 }
	 description {
	    state:    "bottom" 0.0;
	    inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_bottom.png";
#endif
	    }
	    fill {
	       origin {
		  offset: 0 0;
	       }
	       size {
		  offset: 0 6;
	       }
	    }
	 }
	 description {
	    state:    "bottom_left" 0.0;
            inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_bottom.png";
#endif
	    }
	    fill {
	       origin {
		  offset: -16 0;
	       }
	       size {
		  offset: 16 6;
	       }
	    }
	 }
	 description {
	    state:    "bottom_right" 0.0;
            inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_bottom.png";
#endif
	    }
	    fill {
	       origin {
		  offset: 0 0;
	       }
	       size {
		  offset: 16 6;
	       }
	    }
	 }
	 description {
	    state:    "left" 0.0;
            inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_left.png";
#endif
	    }
	    fill {
	       origin {
		  offset: -6 0;
	       }
	       size {
		  offset: 6 0;
	       }
	    }
	 }
	 description {
	    state:    "left_top" 0.0;
            inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_left.png";
#endif
	    }
	    fill {
	       origin {
		  offset: -6 -16;
	       }
	       size {
		  offset: 6 16;
	       }
	    }
	 }
	 description {
	    state:    "left_bottom" 0.0;
            inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_left.png";
#endif
	    }
	    fill {
	       origin {
		  offset: -6 0;
	       }
	       size {
		  offset: 6 16;
	       }
	    }
	 }
	 description {
	    state:    "right" 0.0;
            inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_right.png";
#endif
	    }
	    fill {
	       origin {
		  offset: 0 0;
	       }
	       size {
		  offset: 6 0;
	       }
	    }
	 }
	 description {
	    state:    "right_top" 0.0;
            inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_right.png";
#endif
	    }
	    fill {
	       origin {
		  offset: 0 -16;
	       }
	       size {
		  offset: 6 16;
	       }
	    }
	 }
	 description {
	    state:    "right_bottom" 0.0;
            inherit:  "default" 0.0;
	    image {
#ifdef VTX_SHELF_MULIT
	       normal: "shelf_background_right.png";
#endif
	    }
	    fill {
	       origin {
		  offset: 0 0;
	       }
	       size {
		  offset: 6 16;
	       }
	    }
	 }
      }
      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
//	 clip_to:       "item_clip";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   8   2;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -9   -3;
	    }
	 }
	 description {
	    state:    "top_left" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   2    2;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -9   -3;
	    }
	 }
	 description {
	    state:    "top_right" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   8   2;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -3   -3;
	    }
	 }
	 description {
	    state:    "bottom" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   8   2;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -9   -3;
	    }
	 }
	 description {
	    state:    "bottom_left" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   2   2;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -9   -3;
	    }
	 }
	 description {
	    state:    "bottom_right" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   8   2;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -3   -3;
	    }
	 }
	 description {
	    state:    "left" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   2    8;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -3   -9;
	    }
	 }
	 description {
	    state:    "left_top" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   2    2;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -3   -9;
	    }
	 }
	 description {
	    state:    "left_bottom" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   2    8;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -3   -3;
	    }
	 }
	 description {
	    state:    "right" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   2    8;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -3   -9;
	    }
	 }
	 description {
	    state:    "right_top" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   2    2;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -3   -9;
	    }
	 }
	 description {
	    state:    "right_bottom" 0.0;
	    inherit:  "default" 0.0;
	    rel1 {
	       relative: 0.0  0.0;
	       offset:   2    18;
	    }
	    rel2 {
	       relative: 1.0  1.0;
	       offset:   -3   -3;
	    }
	 }
      }
   }
   programs {

      program {
	 name:    "orient1";
	 signal:  "e,state,orientation,top";
	 source:  "e";
	 action:  STATE_SET "default" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient2";
	 signal:  "e,state,orientation,top_left";
	 source:  "e";
	 action:  STATE_SET "top_left" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient3";
	 signal:  "e,state,orientation,top_right";
	 source:  "e";
	 action:  STATE_SET "top_right" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient4";
	 signal:  "e,state,orientation,bottom";
	 source:  "e";
	 action:  STATE_SET "bottom" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient5";
	 signal:  "e,state,orientation,bottom_left";
	 source:  "e";
	 action:  STATE_SET "bottom_left" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient6";
	 signal:  "e,state,orientation,bottom_right";
	 source:  "e";
	 action:  STATE_SET "bottom_right" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient7";
	 signal:  "e,state,orientation,left";
	 source:  "e";
	 action:  STATE_SET "left" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient8";
	 signal:  "e,state,orientation,left_top";
	 source:  "e";
	 action:  STATE_SET "left_top" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient9";
	 signal:  "e,state,orientation,left_bottom";
	 source:  "e";
	 action:  STATE_SET "left_bottom" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient10";
	 signal:  "e,state,orientation,right";
	 source:  "e";
	 action:  STATE_SET "right" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient11";
	 signal:  "e,state,orientation,right_top";
	 source:  "e";
	 action:  STATE_SET "right_top" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient12";
	 signal:  "e,state,orientation,right_bottom";
	 source:  "e";
	 action:  STATE_SET "right_bottom" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
   }
}
group {
   name: "e/shelf/default/inset";
   alias: "e/shelf/invisible/inset";
   parts {
      part {
	 name:          "background";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    image {
	       normal: "surface-dark.png";
	       border: 8 8 8 8;
	    }
	    fill {
	       smooth: 0;
	    }
	    color_class: "Background";
	    color: 255 255 255 90;
        rel1.offset: 1 2;
        rel2.offset: -1 -1;
	 }
      }
      part {
	 name:          "items_clip";
	 type:          RECT;
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       to:       "background";
	       offset:   4    4;
	    }
	    rel2 {
	       to:       "background";
	       offset:   -5    -5;
	    }
	    color: 255 255 255 255;
	 }
      }
      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
	 clip_to:       "items_clip";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   5    6;
	    }
	    rel2 {
	       offset:   -5    -6;
	    }
	 }
      }
   }
}
group {
   name: "e/shelf/default/plain";
   alias: "e/shelf/invisible/plain";
   parts {
      part {
	 name:          "items_clip";
	 type:          RECT;
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   0    0;
	    }
	    rel2 {
	       offset:   -1    -1;
	    }
	    color: 255 255 255 255;
	 }
      }
      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
	 clip_to:       "items_clip";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   0 0;
	    }
	    rel2 {
	       offset:   -1    -1;
	    }
	 }
      }
   }
}





group {
   name: "e/shelf/invisible/base";
   data {
      // this tells e the border is shaped
      item: "shaped" "1";
      item: "hidden_state_size" "1";
   }
   parts {

      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       to: "base";
	    }
	    rel2 {
	       to: "base";
	    }
	 }
   description {
	    state:    "top_left" 0.0;
	    inherit:  "default" 0.0;
	 }
	 description {
	    state:    "top_right" 0.0;
	    inherit:  "default" 0.0;
	 }
	 description {
	    state:    "bottom" 0.0;
	    inherit:  "default" 0.0;
	 }
	 description {
	    state:    "bottom_left" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "bottom_right" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "left" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "left_top" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "left_bottom" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "right" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "right_top" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "right_bottom" 0.0;
            inherit:  "default" 0.0;
	 }

      }
      part {
	 name:          "base";
	 mouse_events:  1;
	 type:          RECT;
	 repeat_events: 1;
	 description {
	    state:    "default" 0.0;
	    color:    255 255 255 0;
	 }
   description {
	    state:    "top_left" 0.0;
	    inherit:  "default" 0.0;
	 }
	 description {
	    state:    "top_right" 0.0;
	    inherit:  "default" 0.0;
	 }
	 description {
	    state:    "bottom" 0.0;
	    inherit:  "default" 0.0;
	 }
	 description {
	    state:    "bottom_left" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "bottom_right" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "left" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "left_top" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "left_bottom" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "right" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "right_top" 0.0;
            inherit:  "default" 0.0;
	 }
	 description {
	    state:    "right_bottom" 0.0;
            inherit:  "default" 0.0;
	 }
      }
   }
   programs {
     /* program {
	 name:    "hide";
	 signal:  "e,state,hidden";
	 source:  "e";
	 action:  STATE_SET "hidden" 0.0;
	 transition: ACCELERATE 0.3;
	 target:  "item_clip_bottom";
	 target:  "item_clip_top";
	 target:  "item_clip_left";
	 target:  "item_clip_right";
      }
      program {
	 name:    "show";
	 signal:  "e,state,visible";
	 source:  "e";
	 transition: DECELERATE 0.3;
	 action:  STATE_SET "default" 0.0;
	 target:  "item_clip_bottom";
	 target:  "item_clip_top";
	 target:  "item_clip_left";
	 target:  "item_clip_right";
      }*/
      program {
	 name:    "orient1";
	 signal:  "e,state,orientation,top";
	 source:  "e";
	 action:  STATE_SET "default" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient2";
	 signal:  "e,state,orientation,top_left";
	 source:  "e";
	 action:  STATE_SET "top_left" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient3";
	 signal:  "e,state,orientation,top_right";
	 source:  "e";
	 action:  STATE_SET "top_right" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient4";
	 signal:  "e,state,orientation,bottom";
	 source:  "e";
	 action:  STATE_SET "bottom" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient5";
	 signal:  "e,state,orientation,bottom_left";
	 source:  "e";
	 action:  STATE_SET "bottom_left" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient6";
	 signal:  "e,state,orientation,bottom_right";
	 source:  "e";
	 action:  STATE_SET "bottom_right" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient7";
	 signal:  "e,state,orientation,left";
	 source:  "e";
	 action:  STATE_SET "left" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient8";
	 signal:  "e,state,orientation,left_top";
	 source:  "e";
	 action:  STATE_SET "left_top" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient9";
	 signal:  "e,state,orientation,left_bottom";
	 source:  "e";
	 action:  STATE_SET "left_bottom" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient10";
	 signal:  "e,state,orientation,right";
	 source:  "e";
	 action:  STATE_SET "right" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient11";
	 signal:  "e,state,orientation,right_top";
	 source:  "e";
	 action:  STATE_SET "right_top" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
      program {
	 name:    "orient12";
	 signal:  "e,state,orientation,right_bottom";
	 source:  "e";
	 action:  STATE_SET "right_bottom" 0.0;
	 target:  "base";
	 target:  "e.swallow.content";
      }
   }
}

group {
   name: "e/shelf/invisible/inset";
   parts {
      part {
	 name:          "background";
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   0    1;
	    }
	    rel2 {
	       offset:   -0    -0;
	    }
	    image {
#ifdef VTX_SHELF_ENTRY
	       normal: "shelf_entry.png";
#else
         normal: "e_surface.png";
 #endif
	       border: VTX_IMG_BORDER;
	    }
	    fill {
	       smooth: 0;
	    }
	 }
      }
      part {
	 name:          "items_clip";
	 type:          RECT;
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       to:       "background";
	       offset:   4    4;
	    }
	    rel2 {
	       to:       "background";
	       offset:   -5    -5;
	    }
	    color: 255 255 255 255;
	 }
      }
      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
	 clip_to:       "items_clip";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   4    4;
	    }
	    rel2 {
	       offset:   -5    -5;
	    }
	 }
      }
   }
}

group {
   name: "e/shelf/invisible/plain";
   parts {
      part {
	 name:          "items_clip";
	 type:          RECT;
	 mouse_events:  0;
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   0    0;
	    }
	    rel2 {
	       offset:   -1    -1;
	    }
	    color: 255 255 255 255;
	 }
      }
      part {
	 name:          "e.swallow.content";
	 type:          SWALLOW;
	 clip_to:       "items_clip";
	 description {
	    state:    "default" 0.0;
	    rel1 {
	       offset:   0 0;
	    }
	    rel2 {
	       offset:   -1    -1;
	    }
	 }
      }
   }
}
